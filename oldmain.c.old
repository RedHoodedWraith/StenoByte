#include <ncurses.h>
#include <unistd.h>  /* only for sleep() */

/*
 * Checks if the keyboard key was hit
 */
int kbhit(void) {
    int ch = getch();   // Gets the character from the input queue and stores it as an int

    if (ch != ERR) {    // Ensures there is no error
        ungetch(ch);    // Puts the character back into the input queue
        return 1;   // Success Casedsa;
    }

    return 0;   // Fail Case
}

void button_pushed(int* b, char lower, char upper) {

}

// TODO: Try This: https://gamedev.stackexchange.com/questions/144558/key-released-multiple-keys-how-to-go-around-ncurses-limitations
void keys_to_binary() {
    int b0 = 0, b1 = 0, b2 = 0, b3 = 0, b4 = 0, b5 = 0, b6 = 0, b7 = 0; // TODO: Maybe turn this into an array?
    int ch = getch();

    switch (ch) {
        case 'a':
        case 'A':
            b7 = 1;
            break;
        case 's':
        case 'S':
            b6 = 1;
            break;
        case 'd':
        case 'D':
            b5 = 1;
            break;
        case 'f':
        case 'F':
            b4 = 1;
            break;
        case 'j':
        case 'J':
            b3 = 1;
            break;
        case 'k':
        case 'K':
            b2 = 1;
            break;
        case 'l':
        case 'L':
            b1 = 1;
            break;
        case ';':
        case ':':
            b0 = 1;
            break;
    }

    // Prints a summary of the bits entered
    printw("b7: %d, b6: %d, b5: %d, b4: %d, b3: %d, b2: %d, b1: %d, b0: %d\n", b7, b6, b5, b4, b3, b2, b1, b0);

}

int main(void)  {
    initscr();  // Initialise Ncurses

    cbreak();   // Disables Line Buffering
    noecho();   // Disables Echoing (Automatic Printing)
    nodelay(stdscr, FALSE);  // Waits until a keypress (if FALSE), or keeps running regardless of keypress (if TRUE)

    scrollok(stdscr, FALSE); // Updates the cursor to the new line
    while (1) {
        if (kbhit()) {
            printw("Key pressed! It was: %d\n", getch());
            // keys_to_binary();
            refresh();
        } else {
            printw("No key pressed yet...\n");
            refresh();
            sleep(1);
        }
        // keys_to_binary();
        // refresh();
        sleep(2);
    }
}